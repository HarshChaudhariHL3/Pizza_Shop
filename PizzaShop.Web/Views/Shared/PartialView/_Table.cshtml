@model PizzaShop.Entity.ViewModel.PaginationViewModel<PizzaShop.Entity.ViewModel.TableViewModel>
@{
    ViewData["Title"] = "Menu Page";
}



<div class="flex-grow-1 p-3 overflow-auto">
    <!-- header of table  -->
    <div class="d-flex align-items-center gap-2">
        <div id="item-modifier-toggle">
            <button class="btn" style="box-shadow: none;">
                <img src="img/menu-black.svg" height="30px" alt="">
            </button>
        </div>
        <h1 id="header">Tables</h1>
    </div>
    <!-- search-add-item section  -->
    <div class="d-flex align-items-center justify-content-end">
        <div id="has-search">
            <span class="fa fa-search form-control-feedback"></span>
            <input class="form-control " type="search" value="@ViewBag.search" placeholder="Search" name="search" id="searchTable"
                        aria-label="Search">
        </div>
        <button type="button" class="btn deleteMultipleTable" data-bs-toggle="modal">
            <i class="bi bi-trash h5"></i>
        </button>
        <button type="button" class="btn" id="AddTableBtnForTable" data-bs-toggle="modal" data-bs-target="#addTable">
            <i class="btn bg-primary bi bi-plus-lg text-white">New Table</i>
        </button>
    </div>
    <!-- finish search-add-item section -->
    <!-- table  -->
    <div class="table-responsive " id="Table">
        <table class="table">
            <thead>
                <tr>
                    <th>
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="selectAll">
                        </div>
                    </th>
                    <th scope="col">Name</th>
                    <th scope="col">Capacity</th>
                    <th scope="col">Status</th>
                    <th scope="col">Action</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.Items.Any())
                {
                    foreach (var item in Model.Items)
                    {
                        <tr>
                            <td><input value="@item.TableId" data-categoryItem-id="@item.TableId" class="form-check-input main-checkbox row-checkbox deleteItemCheckbox" type="checkbox"></td>

                            <td class="d-flex gap-2 align-content-center">
                                <img src="~/images/dining-menu.png" alt="" height="25">
                                <p>@item.TableName</p>
                            </td>
                        <td>@item.Capacity</td>
                            <td class="">
                                @if (item.Status == true)
                                {
                                   <span class="btn btn-sm bg-success text-white">Occupied</span>
                                }
                                else
                                {
                                    <span class="btn btn-sm bg-danger text-white">Free</span>
                                }
                        </td>
                        <td class="gap-3">
                            <button class="btn  edit-btn" data-table-id="@item.TableId" id="EditBtnForTable" data-bs-toggle="modal" data-bs-target="#editTable"><i class="bi bi-pen"></i></button>
                            <button class="btn delete-btn" data-table-id="@item.TableId" id="DeleteBtnForTable" data-bs-toggle="modal" data-bs-target="#deleteTable"><i class="bi bi-trash"></i></button>
    
                        </td>
                        </tr>
                    }
                    
                    <tr>
                        <td class="border-0" colspan="10">
                            <div class="d-flex align-content-center align-items-center justify-content-end">
                            <span>Items Per page: </span>
                            <div class="d-flex justify-content-end align-items-center w-25">
                                <div>
                                <select class="form-select ms-2 page-list" asp-for="PageSize" onchange="paginationTable()">
                                    <option value="2" selected="@((Model.PageSize == 2) ? "selected" : null)">2</option>
                                    <option value="5" selected="@((Model.PageSize == 5) ? "selected" : null)">5</option>
                                    <option value="10" selected="@((Model.PageSize == 10) ? "selected" : null)">10</option>
                                    <option value="15" selected="@((Model.PageSize == 15) ? "selected" : null)">15</option>
                                </select>
                                </div>
                                <div class="ms-3">
                                    <span>
                                        Showing 
                                        <span id="startUser">@((Model.CurrentPage - 1) * Model.PageSize + 1)</span> -
                                        <span id="endUser">@Math.Min(Model.CurrentPage * Model.PageSize, Model.TotalItems)</span> of
                                        <span id="totalUser">@Model.TotalItems</span>   
                                    </span>
                                </div>
                                <div class="m-2">
                                <button class="page-link btn" id="prev"  onclick="pageChange('prev')" @(Model.CurrentPage
                                                    == 1 ? "disabled" : "") aria-label="Previous" id="previous_page">
                               
                                <i class="fa-solid fa-backward" aria-hidden="true"></i>
                                </button>
                                </div>
                                <div class="m-2">
                                    <button class="page-link btn" id="next" onclick="pageChange('next')" @((Model.CurrentPage
                                                    *Model.PageSize >= Model.TotalItems) ? "disabled" : "") aria-label="Next" id="next_page">
                                        <i class="fa-solid fa-forward" aria-hidden="true"></i>
                                    </button>
                                </div>
                            </div>
                            </div>
                        </td>
                    </tr>
                }
                else
                {
                    <tr>
                        <td colspan="7">No items found for this Category.</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@* Modal start *@

<div class="modal fade" id="addTable" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Add Table</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form method="post" id="addTableForm">
                <input type="hidden" />
                <div class="modal-body">
                    <div class="d-flex gap-3 mb-3">
                        <div class="form-floating">
                            <input  type="text" id="addTableName" class="form-control hover-effect" placeholder="">
                            <label for="addTableName">Name*</label>
                        </div>

                        <div class="form-floating " style="width: 200px;">
                            <select class="form-select" aria-label="Floating label select example" id="AddSectionSelect">
                            </select>
                            <label for="AddSectionSelect">Section*</label>
                        </div>
                    </div>

                    <div class="d-flex gap-3">
                        <div class="form-floating mb-3">
                            <input type="text" class="form-control" id="addTableCapacity" placeholder="Capacity">
                            <label for="addTableCapacity">Capacity*</label>
                        </div>
                        <div class="form-floating" style="width: 200px;">
                            <select class="form-select"  aria-label="Floating label select example" id="addTableStatus">

                                <option value="" selected>Select Status</option>
                                <option value="true">Occupied</option>
                                <option value="false">Free</option>
                            </select>
                            <label for="addTableStatus">Status*</label>
                        </div>
                    </div>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            </form>
        </div>
    </div>
</div>

@* Edit Table *@
<div class="modal fade" id="editTable" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Edit Table</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form method="post" id="editTableForm">
                <input type="hidden" id="editTableId" />
                <div class="modal-body">
                    <div class="d-flex gap-3 mb-3">
                        <div class="form-floating">
                            <input  type="text" id="editTableName" class="form-control hover-effect" placeholder="">
                            <label for="editTableName">Name*</label>
                        </div>

                        <div class="form-floating " style="width: 200px;">
                            <select class="form-select" aria-label="Floating label select example" id="SectionSelectEdit">
                            </select>
                            <label for="SectionSelectEdit">Section*</label>
                        </div>
                    </div>

                    <div class="d-flex gap-3">
                        <div class="form-floating mb-3">
                            <input type="text" class="form-control" id="editTableCapacity" placeholder="Capacity">
                            <label for="editTableCapacity">Capacity*</label>
                        </div>
                        <div class="form-floating" style="width: 200px;">
                            <select class="form-select"  aria-label="Floating label select example" id="editTableStatus">
                                <option value='false'>Free</option>
                                <option value='true'>Occupied</option>
                            </select>
                            <label for="editTableStatus">Status*</label>
                        </div>
                    </div>

                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            </form>
        </div>
    </div>
</div>

@* Delete table *@

<div class="modal fade" id="deleteTable" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Delete Item</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form method="post" id="deleteForm">
                <div class="modal-body d-flex align-items-center justify-content-center flex-column">
                    <div>
                        <img src="~/images/toppng.com-warning-icon-2400x2400.png" height="50px" width="50px" alt="">
                    </div>
                    <p>Are you sure you want to delete <strong id="deleteTableName"></strong>?</p>
                    <input type="text" id="deleteTableId">
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger" id="confirmDelete">Delete</button>
                </div>
            </form>
        </div>
    </div>
</div>

@* Modal end *@


<script>   
        if (canAddEdit) {
            debugger
            document.querySelectorAll('#EditBtnForTable, #AddTableBtnForTable').forEach(button => {
            button.disabled = true;
            });
        }
        if (canDelete) {
            document.querySelectorAll('#DeleteBtnForTable, .deleteMultipleTable').forEach(button => {
            button.disabled = true;
            });
        }
        
    $('#searchTable').on('search', function() {
    search = $(this).val();  
    fetchTable(currentTableId, currentPage, pageSize, search); 
    });

        function paginationTable() {
            var value =parseInt($("#PageSize").val());

            pageSize = value;
            let totalPages = Math.ceil(@Model.TotalItems / pageSize);
            if (currentPage > totalPages) {
                currentPage = totalPages > 0 ? totalPages : 1;
            }
            fetchTable(currentTableId, currentPage,pageSize, search)
        }

        function pageChange(pageAction) {

            if (pageAction == 'prev') {
                currentPage = currentPage === 1 ? 1 : --currentPage;
            }
            else {
                currentPage = (currentPage * pageSize) > @Model.TotalItems ? currentPage : ++currentPage;
            }
            fetchTable(currentTableId, currentPage ,pageSize, search)
        }

        $.ajax({
            url: '/TableAndSection/SectionsList',
            type: 'GET',
            success: function (data) {
                console.log(data);
                var s = '<option value="-1">Please select Section</option>';
                for (var i = 0; i < data.length; i++) {
                    s += '<option value="' + data[i].sectionId + '">' + data[i].sectionName + '</option>'
                }
                $("#AddSectionSelect").html(s);
            }
        });

    $(document).ready(function () {

        $('#addTableForm').submit(function (e) {
            e.preventDefault();

            var section = parseInt($('#AddSectionSelect').val());
            var tableName = $('#addTableName').val();
            var capacity = $('#addTableCapacity').val();
            var status = $('#addTableStatus').val();

            var formData = {
                SectionId: section,
                TableName: tableName,
                Capacity: capacity,
                Status: status,         
            };

            // Send data to the server using AJAX
            $.ajax({
                url: '/TableAndSection/AddTable',
                type: 'POST',
                data: formData,
                success: function (response) {

                    // Handle success
                    if (response.success) {
                        $('#addTable').modal('hide'); 
                        location.reload();
                    } else {
                        alert('Error: ' + response.message);
                    }
                },
                error: function () {
                    alert('Error updating item.');
                }
            });
        });
        $.ajax({
            url: '/TableAndSection/SectionsList',
            type: 'GET',
            success: function (data) {
                console.log(data);
                var s = '<option value="-1">Please select Section</option>';
                for (var i = 0; i < data.length; i++) {
                    s += '<option value="' + data[i].sectionId + '">' + data[i].sectionName + '</option>'
                }
                $("#SectionSelectEdit").html(s);
            }
        });

        $(document).on('click', '.edit-btn', function () {

            var tableId = $(this).data('table-id');
            $.ajax({
                url: '/TableAndSection/GetTableDetails',
                type: 'GET',
                data: { tableId: tableId },
                success: function (data) {
                    console.log(data);
                    debugger
                    @* $('#editItemId').val(data.categoryItemId); *@
                    $('#editTableName').val(data.tableName);
                    $('#editTableId').val(data.tableId);
                    $('#editTableCapacity').val(data.capacity);
                    $('#SectionSelectEdit').val(data.sectionId);
                    @* $('#editTableStatus').val(data.status.toString()); *@
                    $('#editTableStatus').val(data.status);
                    $('#editTable').modal('show');
                },
                error: function (error) {
                    console.error('Error fetching item details:', error);
                }
            });
        });

        $('#editTableForm').submit(function (e) {
            debugger;
            e.preventDefault();
            var tableId = parseInt($('#editTableId').val());
            var tableName = $('#editTableName').val();
            var capacity = $('#editTableCapacity').val();
            var status = $('#editTableStatus').val();
            var sectionId = parseInt($('#SectionSelectEdit').val());



            var formData = {
                TableId: tableId,
                TableName:tableName,
                Capacity: capacity,
                Status: status,
                SectionId: sectionId
            };

            // Send data to the server using AJAX
            $.ajax({
                url: '/TableAndSection/UpdateTable',
                type: 'POST',
                data: formData,
                success: function (response) {
                    // Handle success
                    debugger;
                    if (response.success) {
                        
                        $('#editTable').modal('hide');
                        @* $('#Table').html(response); *@
                        location.reload();
                    } else {
                        console.log(response);
                        @* alert('Error: ' + response.message); *@
                    }
                },
                error: function (response) {
                    console.log(response);
                    @* alert('Error updating item.'); *@
                }
            });
        });

        $(document).on('click', '.delete-btn', function () {


            var tableId = $(this).data('table-id');
            $.ajax({
                url: '/TableAndSection/GetTableDetails',
                type: 'GET',
                data: { tableId: tableId },
                success: function (data) {

                    $('#deleteTableName').val(data.tableName);
                    $('#deleteTableId').val(data.tableId);
                    $('#deleteTable').modal('show');
                },
                error: function (error) {
                    console.error('Error fetching item details:', error);
                }
            });
        });

        $('#deleteForm').submit(function (e) {
            e.preventDefault();

            var tableId = $('#deleteTableId').val();
            var itemName = $('#deleteTableName').val();

            // Send data to the server using AJAX
            $.ajax({
                url: '/TableAndSection/DeleteTable',
                type: 'POST',
                data: { tableId: tableId },
                success: function (response) {
                    // Handle success
                    if (response.success) {
                         $('#deleteItemModal').modal('hide');
                        location.reload();
                    } else {
                         $('#deleteItemModal').modal('hide'); 
                        
                        location.reload();
                    }
                },
                error: function () {
                    alert('Error updating item.');
                }
            });
        });
    });
</script>
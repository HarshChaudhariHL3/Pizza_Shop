@model PizzaShop.Entity.ViewModel.PaginationViewModel<PizzaShop.Entity.ViewModel.UserlistViewModel>


<div class="table-responsive p-4 tile ">
    <table class="table table-bordered align-middle ">
        <thead>
            <tr>
            <th onclick="sortTable('Name')">
              Name
            <a href="javascript:void(0);" >  
                <span id="name-sort-icon">
                    <i class="@(
                    Model.sortColumn == "Name" 
                        ? (Model.sortOrder == "asc" 
                        ? "bi bi-sort-up text-decoration-none text-black h4" 
                        : "bi bi-sort-down-alt text-decoration-none text-black h4") 
                        : "text-decoration-none text-black h4")"></i></span>
            </a>
                 
        </th>
            </a>
                <th scope="col">Email</th>
                <th scope="col">Phone</th>
              <th scope="col"> Role
                <a href="javascript:void(0);" onclick="sortTable('Role')">
                <span id="role-sort-icon">
                    <i class="@(
                    Model.sortColumn == "Role" 
                        ? (Model.sortOrder == "asc" 
                        ? "bi bi-sort-up text-decoration-none text-black h4" 
                        : "bi bi-sort-down-alt text-decoration-none text-black h4") 
                        : "text-decoration-none text-black h4")"></i></span>
            </a>
                     
            </th>  
                <th scope="col">Status</th>
                <th scope="col">Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in @Model.Items)
            {
                <tr>
                    <td class="d-flex gap-2 align-items-center">
                        <div>
                            <img src="~/@item.Imgurl" class="rounded-circle" alt="pic" width="40px" height="40px">
                        </div>
                        <span>@item.FirstName @item.LastName</span>

                    </td>
                    <td>@item.Email</td>

                    <td>@item.Phone</td>
                    <td>@item.RoleName</td>
                    <td class="">
                        @if (@item.Status == true)
                        {
                            <span class="btn btn-sm bg-success text-white">Active</span>
                        }
                        else
                        {
                            <span class="btn btn-sm bg-danger text-white">Inactive</span>
                        }
                    </td>
                    <td class="d-flex">
                        <form asp-action="Edituser" asp-controller="Users" method="get">
                            <input type="hidden" name="email" value="@item.Email">
                            <input type="hidden" name="Name" value="@item.FirstName">
                            <button type="submit" class="btn" id="editBtn">
                                <i class="bi bi-pencil"></i>
                            </button>
                        </form>
                        <button type="button" class="btn openmodel" data-bs-toggle="modal" data-bs-target="#exampleModal"
                            data-id="@item.Email" id="deleteBtn">
                            <i class="bi bi-trash"></i>
                        </button>
                    </td>
                </tr>
            }
            <tr>
                        <td class="border-0" colspan="10">
                            <div class="d-flex align-content-center align-items-center justify-content-end">
                            <span>Items Per page: </span>
                            <div class="d-flex justify-content-end align-items-center w-25">
                                <div>
                                <select class="form-select ms-2 page-list" asp-for="PageSize" onchange="paginationTable()">
                                    <option value="2" selected="@((Model.PageSize == 2) ? "selected" : null)">2</option>
                                    <option value="5" selected="@((Model.PageSize == 5) ? "selected" : null)">5</option>
                                    <option value="10" selected="@((Model.PageSize == 10) ? "selected" : null)">10</option>
                                    <option value="15" selected="@((Model.PageSize == 15) ? "selected" : null)">15</option>
                                </select>
                                </div>
                                <div class="ms-3">
                                    <span>
                                        Showing 
                                        <span id="startUser">@((Model.CurrentPage - 1) * Model.PageSize + 1)</span> -
                                        <span id="endUser">@Math.Min(Model.CurrentPage * Model.PageSize, Model.TotalItems)</span> of
                                        <span id="totalUser">@Model.TotalItems</span>   
                                    </span>
                                </div>
                                <div class="m-2">
                                <button class="page-link btn" id="prev"  onclick="pageChange('prev')" @(Model.CurrentPage
                                                    == 1 ? "disabled" : "") aria-label="Previous" id="previous_page">
                               
                                <i class="fa-solid fa-backward" aria-hidden="true"></i>
                                </button>
                                </div>
                                <div class="m-2">
                                    <button class="page-link btn" id="next" onclick="pageChange('next')" @((Model.CurrentPage
                                                    *Model.PageSize >= Model.TotalItems) ? "disabled" : "") aria-label="Next" id="next_page">
                                        <i class="fa-solid fa-forward" aria-hidden="true"></i>
                                    </button>
                                </div>
                            </div>
                            </div>
                        </td>
                    </tr>
        </tbody>
    </table>
</div>


<script>
    @* var canAddEdit = '@Context.Items["CanAddEdit"]';
        if (canAddEdit) {
            document.querySelectorAll('#editBtn').forEach(button => {
            button.disabled = true;
            });
        }
        var canDelete = '@Context.Items["CanDelete"]';
        if (!canDelete) {
            document.querySelectorAll('#deleteBtn').forEach(button => {
            button.disabled = true;
            });
        } *@


    function paginationTable() {
        var value =parseInt($("#PageSize").val());

        pageSize = value;
        let totalPages = Math.ceil(@Model.TotalItems / pageSize);
        if (currentPage > totalPages) {
            currentPage = totalPages > 0 ? totalPages : 1;
        }
        fetchUserList(currentPage, pageSize, search,sortColumn,sortOrder)
    }

    function pageChange(pageAction) {

        if (pageAction == 'prev') {
            currentPage = currentPage === 1 ? 1 : --currentPage;
        }
        else {
            currentPage = (currentPage * pageSize) > @Model.TotalItems ? currentPage : ++currentPage;
        }
        fetchUserList(currentPage, pageSize, search,sortColumn,sortOrder)
    }
</script>